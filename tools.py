import time

import telebot
from telebot import types
from SQL_load import LoadMySQL
from string import Template
import text

bot = telebot.TeleBot('5441324806:AAFX2bdVqwbpV6307GLOGNjib3p5S7gdgMk')
SQL = LoadMySQL()
prontochat = -892313553

"""–º–∏–Ω–∏ –¥–∞–π–¥–∂–µ—Å—Ç –æ—Ç –ú–∏—Ö–∞–∏–ª–∞ —É –º–µ–Ω—è —Ç—É—Ç –≤ –º—É—Å—Ç–∞–Ω–≥ –º–µ–Ω—é —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ –ª–æ–≥–∏–∫—É –∫–Ω–æ–ø–∫–∏ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ —Ç–æ–ª—å–∫–æ —Ç—É—Ç –∂–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
 –∏ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ, –ø–æ–¥–∫–ª—é—á–∏—Ç—å –æ—Å—Ç–∞–ª–æ—Å—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ –ë–î –∏ –º–Ω–æ–∂–Ω–æ –¥–æ–¥–ª—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ —è –ø—ã—Ç–∞–ª—Å—è —Å–¥–µ–ª–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ –º—É—Ç–æ–¥ –∫–æ—Ç–æ—Ä—ã–π 
 —É–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–æ –æ–Ω —á–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –Ω–∞–¥–æ """


class MustangMenu():
    def __init__(self):
        self.answer_id = 0

    def check(self, message):
        if SQL.select_to_bd("user", message.chat.id):
            pass
        else:
            SQL.insert_user(message.chat.id)

    def question(self, message):
        markup_line = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
        menu = types.KeyboardButton("üîÑVoltar ao menu")
        # back = types.KeyboardButton("–ù–∞–∑–∞–¥ –∫ –≤–æ–ø—Ä–æ—Å–∞–º")
        markup_line.add(menu)
        bot.send_message(message.chat.id, 'üìåPreguntas populares', reply_markup=markup_line)

        quest = text.questions

        markup = types.InlineKeyboardMarkup(row_width=1)

        question_1 = types.InlineKeyboardButton(quest[0][0], callback_data='0')
        question_2 = types.InlineKeyboardButton(quest[1][0], callback_data='1')
        question_3 = types.InlineKeyboardButton(quest[2][0], callback_data='2')
        question_4 = types.InlineKeyboardButton(quest[3][0], callback_data='3')
        question_5 = types.InlineKeyboardButton(quest[4][0], callback_data='4')
        question_6 = types.InlineKeyboardButton(quest[5][0], callback_data='5')

        markup.add(question_1, question_2, question_3, question_4, question_5, question_6)
        bot.send_message(message.chat.id, 'Escolha as perguntas que lhe interessam:', reply_markup=markup)

        # —É–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –≤
    def back_to_question(self, call):
        if self.answer_id != 0:
            print(self.answer_id)
            bot.delete_message(call.message.chat.id, self.answer_id.id)

        # —Ä–µ–∞–ª–∏–∑—É–µ—Ç –∫–Ω–æ–ø–∫–∏ –≤–æ–ø—Ä–æ—Å –æ—Ç–≤–µ—Ç –æ—Ç–≤–µ—Ç—ã –±–µ—Ä–µ—Ç —Å –ë–î
    def call_quest(self, call):
        if call.message:
            markup_line = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
            menu = types.KeyboardButton("üîÑVoltar ao menu")
            # back = types.KeyboardButton("–ù–∞–∑–∞–¥ –∫ –≤–æ–ø—Ä–æ—Å–∞–º")
            markup_line.add(menu)
            sample = Template("$question\n\n üìç $answer")
            for i in range(6):
                if call.data == str(i):
                    info = text.questions[i]
                    self.back_to_question(call)
                    self.answer_id = bot.send_message(call.message.chat.id, sample.substitute({"question": info[0],
                                                                                              "answer": info[1]}),
                                                      reply_markup=markup_line)

    def del_coment(self, call):
        bot.delete_message(call.message.chat.id, self.answer_id)

    # –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ —Å–µ–±—è —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±—Ä–∞—Ç–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏
    def menu(self, message):

        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=3)
        com_recall = types.KeyboardButton("üó£Feedback")
        com_questions = types.KeyboardButton("‚ùìPreguntas")
        com_auhtor = types.KeyboardButton("üë®‚ÄçüíªAuthor")
        com_statistic = types.KeyboardButton("üìäEstat√≠sticas")
        com_earn = types.KeyboardButton("üí∂Ganhar dinheiro")
        markup.add(com_recall, com_questions, com_auhtor, com_statistic, com_earn)

        name = message.chat.first_name
        bot.send_message(message.chat.id, text.greeting.substitute({'name': name}), reply_markup=markup, parse_mode="Markdown")

        # —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –∞–≤—Ç–æ—Ä–∞
    @staticmethod
    def auhtor(message):
        markup_line = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
        menu = types.KeyboardButton('üîÑVoltar ao menu')
        markup_line.add(menu)

        bot.send_message(message.chat.id, 'üìåO projeto "Mustang BOT"', reply_markup=markup_line)

        markup = types.InlineKeyboardMarkup(row_width=2)
        inst_com = types.InlineKeyboardButton(f"üì∑ Instagram", 'https://instagram.com/fernando_cardoso_jr?igshid=YmMyMTA2M2Y=')
        tele_com = types.InlineKeyboardButton(f"‚úâÔ∏è Telegram", 'https://t.me/FernandoCardosoJr/')
        info_com = types.InlineKeyboardButton(f"üí¨ Hist√≥ria do projeto", 'https://telegra.ph/Como-tudo-isso-come%C3%A7ou-05-14')
        markup.add(tele_com, inst_com, info_com)

        file = open("images/author.jpg", 'rb')

        bot.send_photo(message.chat.id, file, text.text_author.substitute(), reply_markup=markup)

    # —Ä–∏–∞–ª–∏–∑—É–µ—Ç —Ä–∞–±–æ—Ç—É –∫–Ω–æ–ø–∫–∏ –æ—Ç–∑—ã–≤—ã –∏–∑ –±–¥ –±–µ—Ä–µ—Ç —Å—ã–ª–∫–∏ –Ω–∞ —Ñ–æ—Ç–æ –≥–ª–∞–≤–Ω–æ–µ —á—Ç–æ –±—ã –±—ã–ª–æ –≤ jpg —ç—Ç–æ –º–æ–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å –≤ —Å–∞–º–æ–º
    @staticmethod
    def feedback(message):
        markup_line = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
        menu = types.KeyboardButton('üîÑVoltar ao menu')
        more = types.KeyboardButton('Mais feedback ‚è©')
        markup_line.add(more, menu)
        data = SQL.select_to_bd('feedback')

        bot.send_message(message.chat.id, 'üìå–í—ã –Ω–∞ –≤–∫–ª–∞–¥–∫–µ –æ—Ç–∑—ã–≤—ã', reply_markup=markup_line)
        # –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å '.jpg' –µ—Å–ª–∏ –≤–≤–µ—Å—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—É—Ç—å –≤ –ë–î
        file = open(data[0]['link_imeges'], 'rb')

        bot.send_photo(message.chat.id, file, f'{data[0]["Coment"]}\n\n[–∏–Ω—Ç—Å–∞–≥—Ä–∞–º —á–µ–ª–æ–≤–µ–∫–∞]({data[0]["link_insta"]})',
                       parse_mode='Markdown')

    # –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

    def statistic(self, message):
        markup_line = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
        menu = types.KeyboardButton('üîÑVoltar ao menu')
        markup_line.add(menu)
        data = SQL.select_to_bd('statictic')[0]

        bot.send_message(message.chat.id, 'üìå–í—ã –Ω–∞ –≤–∫–ª–∞–¥–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', reply_markup=markup_line)

        bot.send_message(message.chat.id, text.statistic_text.substitute({"users": data['users'],
                                                                          "money": data['money'],
                                                                          "friend": data['friend'],
                                                                          "quest": data['quest']}), parse_mode="Markdown")

    def preparation(self, message):

        markup_line = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
        com_ua = types.InlineKeyboardButton('Espanha')
        com_br = types.InlineKeyboardButton('Portugal')
        com_ca = types.InlineKeyboardButton('Canad√°')
        menu = types.KeyboardButton('üîÑVoltar ao menu')
        markup_line.add(com_ua, com_br, com_ca, menu)

        comment = 'A Binance √© a patrocinadora e parceira oficial do projeto, a empresa garante seu lucro!'
        file = open('images/sertificat.jpg', 'rb')

        bot.send_photo(message.chat.id, file, comment)
        bot.send_message(message.chat.id, "Escolha seu pa√≠s de resid√™ncia‚§µÔ∏è", reply_markup=markup_line)

    def preparation_two(self, message):
        markup_line = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
        price_low = types.InlineKeyboardButton("3200")
        price_medium = types.InlineKeyboardButton("5100")
        price_high = types.InlineKeyboardButton("8500")
        menu = types.InlineKeyboardButton("üîÑVoltar ao menu")
        markup_line.add(price_low, price_medium, price_high, menu)
        file = open("images/photo1.jpg", 'rb')
        text_ = 'Fernando √© um parceiro oficial da "Ford" e "Binance". Esta √© uma garantia de sua confian√ßa em mim!'

        bot.send_photo(message.chat.id, file, text_)
        bot.send_message(message.chat.id, 'Quanto voc√™ quer ganhar?‚§µÔ∏è', reply_markup=markup_line)

    def start(self, message):
        SQL.update_to_user(message.chat.id, message.text)
        markup_start = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
        start = types.InlineKeyboardButton("‚ñ∂Ô∏èSTART")
        menu = types.InlineKeyboardButton("üîÑVoltar ao menu")

        markup = types.InlineKeyboardMarkup()
        como = types.InlineKeyboardButton("‚öôÔ∏è Como funciona?",
                                          url="https://telegra.ph/Como-funciona-o-sistema-de-algoritmos-05-14")

        markup.add(como)
        markup_start.add(start, menu)

        bot.send_message(message.chat.id, "üìñ *GERENTE*, selecionamos tarefas adequadas para voc√™...",
                         reply_markup=markup_start, parse_mode='Markdown')
        bot.send_message(message.chat.id, text.text_start.substitute({"price": message.text}),
                         reply_markup=markup, parse_mode='Markdown')

    def level_1(self, message):
        price = SQL.select_to_bd("user", message.chat.id)[0]['price']
        markup_line = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
        level = types.KeyboardButton('Sim, v√° para "Tarefa 2"‚è©')
        markup_line.add(level)

        markup = types.InlineKeyboardMarkup(row_width=1)
        inst_com = types.InlineKeyboardButton(f"üì∑ Assine a stagram",
                                              'https://instagram.com/fernando_cardoso_jr?igshid=YmMyMTA2M2Y=')
        markup.add(inst_com)
        bot.send_message(message.chat.id, 'üìåTarefa 1')

        # bot.send_message(message.chat.id, "üìñ –ø–æ–¥–±–µ—Ä–∞–µ–º –∑–∞–¥–∞–Ω–∏—è... –±", reply_markup=bot.)
        bot.send_message(message.chat.id, text.text_level1.substitute({"price": price}), reply_markup=markup)
        time.sleep(1)
        bot.send_message(message.chat.id, '‚òëÔ∏èGERENTE, voc√™ completou com sucesso a "Tarefa 1"!',
                         reply_markup=markup_line)

    def level_2(self, message):

        price = SQL.select_to_bd('user', message.chat.id)[0]['price']
        markup_line = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
        level = types.KeyboardButton('Sim, v√° para "Tarefa 3"‚è©')

        markup = types.InlineKeyboardMarkup()
        conatate = types.InlineKeyboardButton("üì©Contate Margarida",
                                              url="https://xn--80affa3aj0al.xn--80asehdb/#@margaridalmeida")
        markup.add(conatate)

        markup_line.add(level)

        video = open("images/video_2022-11-20_22-15-19.mp4", "rb")
        bot.send_message(message.chat.id, '‚òëÔ∏èGERENTE, voc√™ completou com sucesso a "Tarefa 1"!')

        bot.send_message(message.chat.id, 'üìåTarefa 2')
        bot.send_video(message.chat.id, video)
        bot.send_message(message.chat.id, text.text_level2.substitute({"price": price}), parse_mode="Markdown")
        time.sleep(5)
        bot.send_message(message.chat.id, text.text_level2_after.substitute({'price': price}), parse_mode="Markdown",
                         reply_markup=markup_line)

    def level_3(self, message):
        markup_line = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
        yes = types.InlineKeyboardButton('Sim, vou deixar uma feedback')
        no = types.InlineKeyboardButton('N√£o, eu quero permanecer inc√≥gnito')
        markup_line.add(yes, no)

        markup = types.InlineKeyboardMarkup()
        sait = types.InlineKeyboardButton('üñ•Navegue pelo site',
                                          url="https://mustangbot-pt.com/")
        markup.add(sait)

        file = open("images/level3.jpg", "rb")

        bot.send_message(message.chat.id, '‚òëÔ∏èGERENTE, voc√™ completou com sucesso a "Tarefa 2"!')
        bot.send_message(message.chat.id, 'üìåTarefa 3', reply_markup=markup_line)
        bot.send_photo(message.chat.id, file, text.text_level3.substitute(), reply_markup=markup)




