import time

import telebot
from telebot import types
from SQL_load import LoadMySQL
from string import Template
import text

bot = telebot.TeleBot('5441324806:AAFX2bdVqwbpV6307GLOGNjib3p5S7gdgMk')
SQL = LoadMySQL()
#prontochat = -892313553

"""–º–∏–Ω–∏ –¥–∞–π–¥–∂–µ—Å—Ç –æ—Ç –ú–∏—Ö–∞–∏–ª–∞ —É –º–µ–Ω—è —Ç—É—Ç –≤ –º—É—Å—Ç–∞–Ω–≥ –º–µ–Ω—é —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ –ª–æ–≥–∏–∫—É –∫–Ω–æ–ø–∫–∏ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ —Ç–æ–ª—å–∫–æ —Ç—É—Ç –∂–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
 –∏ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ, –ø–æ–¥–∫–ª—é—á–∏—Ç—å –æ—Å—Ç–∞–ª–æ—Å—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ –ë–î –∏ –º–Ω–æ–∂–Ω–æ –¥–æ–¥–ª—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ —è –ø—ã—Ç–∞–ª—Å—è —Å–¥–µ–ª–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ –º—É—Ç–æ–¥ –∫–æ—Ç–æ—Ä—ã–π 
 —É–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–æ –æ–Ω —á–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –Ω–∞–¥–æ """


class MustangMenu():
    def __init__(self):
        self.answer_id = 0

    def check(self, message):
        if SQL.select_to_bd("user", message.chat.id):
            pass
        else:
            SQL.insert_user(message.chat.id)

    def question(self, message):
        self.answer_id = 0
        markup_line = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
        menu = types.KeyboardButton("–ú–µ–Ω—é")
        # back = types.KeyboardButton("–ù–∞–∑–∞–¥ –∫ –≤–æ–ø—Ä–æ—Å–∞–º")
        markup_line.add(menu)
        bot.send_message(message.chat.id, 'üìå–í—ã –Ω–∞ –≤–∫–ª–∞–¥–∫–µ –≤–æ–ø—Ä–æ—Å—ã', reply_markup=markup_line)

        quest = SQL.select_to_bd("quest")
        markup = types.InlineKeyboardMarkup(row_width=1)

        question_1 = types.InlineKeyboardButton(quest[0]['question'], callback_data='0')
        question_2 = types.InlineKeyboardButton(quest[1]['question'], callback_data='1')
        question_3 = types.InlineKeyboardButton(quest[2]['question'], callback_data='2')
        question_4 = types.InlineKeyboardButton(quest[3]['question'], callback_data='3')

        markup.add(question_1, question_2, question_3, question_4)
        bot.send_message(message.chat.id, '—á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã', reply_markup=markup)

    # –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ —Å–µ–±—è —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±—Ä–∞—Ç–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏
    def menu(self, message):

        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=3)
        com_recall = types.KeyboardButton("–û—Ç–∑—ã–≤—ã")
        com_questions = types.KeyboardButton("–í–æ–ø—Ä–æ—Å—ã")
        com_auhtor = types.KeyboardButton("–ê–≤—Ç–æ—Ä")
        com_statistic = types.KeyboardButton("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        com_earn = types.KeyboardButton("–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å")
        markup.add(com_recall, com_questions, com_auhtor, com_statistic, com_earn)

        name = message.chat.first_name
        bot.send_message(message.chat.id, f"–∑–¥—Ä–∞—Å–≤—É–π—Ç–µ {name} –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å–≤—É–µ—Ç –º—É—Å—Ç–∞–Ω–≥—Ä—É –±–æ—Ç ", reply_markup=markup)
        # —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –∞–≤—Ç–æ—Ä–∞

    @staticmethod
    def auhtor(message):
        markup_line = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
        menu = types.KeyboardButton('–ú–µ–Ω—é')
        markup_line.add(menu)

        bot.send_message(message.chat.id, 'üìå–í—ã –Ω–∞ –≤–∫–ª–∞–¥–∫–µ –∞–≤—Ç–æ—Ä–∞', reply_markup=markup_line)

        markup = types.InlineKeyboardMarkup(row_width=2)
        inst_com = types.InlineKeyboardButton(f"Instagram", 'https://www.instagram.com/joebiden/')
        tele_com = types.InlineKeyboardButton(f"Telegram", 'https://www.instagram.com/joebiden/')
        info_com = types.InlineKeyboardButton(f"info", 'https://www.instagram.com/joebiden/')
        markup.add(info_com, inst_com, tele_com)

        bot.send_message(message.chat.id, '—Ç—É—Ç –±—É–¥–µ—Ç –ø—Ä–æ –∞–≤—Ç–æ—Ä–∞, —Ñ–æ—Ç–æ', reply_markup=markup)

    # —Ä–∏–∞–ª–∏–∑—É–µ—Ç —Ä–∞–±–æ—Ç—É –∫–Ω–æ–ø–∫–∏ –æ—Ç–∑—ã–≤—ã –∏–∑ –±–¥ –±–µ—Ä–µ—Ç —Å—ã–ª–∫–∏ –Ω–∞ —Ñ–æ—Ç–æ –≥–ª–∞–≤–Ω–æ–µ —á—Ç–æ –±—ã –±—ã–ª–æ –≤ jpg —ç—Ç–æ –º–æ–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å –≤ —Å–∞–º–æ–º
    @staticmethod
    def feedback(message):
        markup_line = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
        menu = types.KeyboardButton('–ú–µ–Ω—é')
        more = types.KeyboardButton('More')
        markup_line.add(menu, more)
        data = SQL.select_to_bd('feedback')

        bot.send_message(message.chat.id, 'üìå–í—ã –Ω–∞ –≤–∫–ª–∞–¥–∫–µ –æ—Ç–∑—ã–≤—ã', reply_markup=markup_line)
        # –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å '.jpg' –µ—Å–ª–∏ –≤–≤–µ—Å—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—É—Ç—å –≤ –ë–î
        file = open(data[0]['link_imeges'] + '.jpg', 'rb')

        bot.send_photo(message.chat.id, file, f'[–∏–Ω—Ç—Å–∞–≥—Ä–∞–º —á–µ–ª–æ–≤–µ–∫–∞]({data[0]["link_insta"]})', parse_mode='Markdown')
        bot.send_message(message.chat.id, data[0]["Coment"])

    # –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

    def statistic(self, message):
        markup_line = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
        menu = types.KeyboardButton('–ú–µ–Ω—é')
        markup_line.add(menu)

        bot.send_message(message.chat.id, 'üìå–í—ã –Ω–∞ –≤–∫–ª–∞–¥–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', reply_markup=markup_line)

        send = Template('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: 5987\n'
                        '–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏: 714 654 –µ–≤—Ä–æ\n'
                        '–ü—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π: 2109\n'
                        '–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∫–≤–µ—Å—Ç–æ–≤: 29 935')

        bot.send_message(message.chat.id, send.substitute())
    # —É–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ —á—Ç–æ –±—ã –Ω–µ –º–µ—à–∞–ª–æ

    def back_to_question(self, message):
        if self.answer_id != 0:
            print(self.answer_id)
            bot.delete_message(message.chat.id, self.answer_id + 1)
        self.question(message)

    # —Ä–µ–∞–ª–∏–∑—É–µ—Ç –∫–Ω–æ–ø–∫–∏ –≤–æ–ø—Ä–æ—Å –æ—Ç–≤–µ—Ç –æ—Ç–≤–µ—Ç—ã –±–µ—Ä–µ—Ç —Å –ë–î
    def call_quest(self, call):
        if call.message:
            markup_line = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
            menu = types.KeyboardButton("–ú–µ–Ω—é")
            back = types.KeyboardButton("–ù–∞–∑–∞–¥ –∫ –≤–æ–ø—Ä–æ—Å–∞–º")
            markup_line.add(back, menu)
            self.answer_id = call.message.id
            self.del_coment(call)
            for i in range(4):
                if call.data == str(i):
                    info = SQL.select_to_bd('quest')[i]['answer']
                    bot.send_message(call.message.chat.id, info, reply_markup=markup_line)

    def del_coment(self, call):
        bot.delete_message(call.message.chat.id, self.answer_id)
        bot.delete_message(call.message.chat.id, self.answer_id - 1)
        bot.delete_message(call.message.chat.id, self.answer_id - 2)

    def preparation(self, message):
        #—Ä–µ–µ—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        markup_line = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
        com_ua = types.InlineKeyboardButton('–£–∫—Ä–∞—ó–Ω–∞')
        com_br = types.InlineKeyboardButton('–ü–æ–ª—å—à–∞')
        markup_line.add(com_ua, com_br)
        text = Template("Binance —è–≤–ª—è–µ—Ç—å—Å—è –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–∏–º —Å–ø–æ–Ω—Å–æ—Ä–æ–º –∏ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º –ø—Ä–æ–µ–∫—Ç–∞, –∫–æ–º–ø–∞–Ω–∏—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –≤–∞–º –ø—Ä–∏–±—ã–ª—å")
        file = open('images\defolt.jpg', 'rb')
        bot.send_photo(message.chat.id, file, text.substitute())
        bot.send_message(message.chat.id, "–≤—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è", reply_markup=markup_line)

    def preparation_two(self, message):
        if SQL.select_to_bd("income", message.chat.id)[0]['price'] > 0:
            self.level_1(message)
        else:
            markup_line = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
            price_low = types.InlineKeyboardButton("3200")
            price_medium = types.InlineKeyboardButton("5100")
            price_high = types.InlineKeyboardButton("8500")
            menu = types.InlineKeyboardButton("–ú–µ–Ω—é")
            markup_line.add(price_low, price_medium, price_high, menu)
            file = open("images/defolt.jpg", 'rb')
            text = '—Ñ–µ—Ä–Ω–∞–Ω–¥–æ —è–≤–ª—è–µ—Ç—å—Å—è –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º –§–æ—Ä–¥ –∏ –ë–∏–Ω–∞–Ω—Å'

            bot.send_photo(message.chat.id, file, text)
            bot.send_message(message.chat.id, '–≤—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –≤—ã–∏–≥—Ä–∞—à', reply_markup=markup_line)

    def start(self, message):
        SQL.update_to_user(message.chat.id, message.text)
        murkup_start = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
        start = types.InlineKeyboardButton("–°—Ç–∞—Ä—Ç")
        murkup_start.add(start)

        text = Template("fdsafafd")

        bot.send_message(message.chat.id, "üìñ –ø–æ–¥–±–µ—Ä–∞–µ–º –∑–∞–¥–∞–Ω–∏—è... ", reply_markup=types.ReplyKeyboardRemove())
        bot.send_message(message.chat.id, text.substitute(),  reply_markup=murkup_start)

    def level_1(self, message):
        price = SQL.select_to_bd("income", message.chat.id)[0]['price']
        markup_line = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
        level = types.KeyboardButton("–≤—Ç–æ—Ä–æ–π —ç—Ç–∞–ø")
        markup_line.add(level)

        if SQL.select_to_bd("income", message.chat.id)[0]['level1']:
            text = Template("–æ—Å—Ç–∞–ª–æ—Å—å –µ—â–µ 5 —ç—Ç–∞–ø–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è üíµ $price –∏ –º–æ–∂–µ—Ç–µ –≤—ã–≤–µ—Å—Ç–∏"
                            "–Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á–µ—Ç\n"
                            "—è –∑–∞–∏–Ω–µ—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω –≤ —Ç–æ–º —á—Ç–æ –ø–æ—Å–ª–µ –≤—ã–∏–≥—Ä–∞—à–∞ –≤—ã –ø–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –º–Ω–µ 15%,"
                            " –∞ –æ—Å—Ç–∞–ª—å–Ω–æ–µ —Å–µ–±–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞"
                            " –∫ –ø–µ–≤–æ–º—É –∑–∞–¥–∞–Ω–∏—é –Ω–∞–∂–º–∏—Ç–µ —Å—Ç—Ä–∞—Ç")
            bot.send_message(message.chat.id, text.substitute({'price': price}), reply_markup=markup_line)

        else:
            bot.send_message(message.chat.id, "üìñ –ø–æ–¥–±–µ—Ä–∞–µ–º –∑–∞–¥–∞–Ω–∏—è... ", reply_markup=types.ReplyKeyboardRemove())

            price = SQL.select_to_bd("income", message.chat.id)[0]['price']
            markup = types.InlineKeyboardMarkup(row_width=1)
            inst_com = types.InlineKeyboardButton(f"In stagram",
                                                  'https://instagram.com/fernando_cardoso_jr?igshid=YmMyMTA2M2Y=')
            markup.add(inst_com)

            #bot.send_message(message.chat.id, "üìñ –ø–æ–¥–±–µ—Ä–∞–µ–º –∑–∞–¥–∞–Ω–∏—è... –±", reply_markup=bot.)
            bot.send_message(message.chat.id, f"–ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –µ–≥–æ —Å—Ç–æ—Ä–∏—Å —á—Ç–æ –±—ã –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å {price}", reply_markup=markup)
            time.sleep(1)
            bot.send_message(message.chat.id, "–ø–æ–∑–¥—Ä–∞–≤–ª—è—é –≤—ã –ø—Ä–æ—à–ª–∏ –ø–µ—Ä–≤—ã–π —ç—Ç–∞–ø", reply_markup=markup_line)
            SQL.update_to_level("level1", message.chat.id)

    def level_2(self, message):
        if SQL.select_to_bd("income", message.chat.id)[0]['level2']:
            bot.send_message(message.chat.id, '—Ç–µ–∫—Å—Ç')
            self.level_3(message)
        else:
            price = SQL.select_to_bd('income', message.chat.id)[0]['price']
            markup_line = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
            level = types.KeyboardButton("—Ç—Ä–µ—Ç–∏–π —ç—Ç–∞–ø")
            markup_line.add(level)


            bot.send_message(message.chat.id, text.text_level2.substitute({"price": price}))
            time.sleep(15)
            bot.send_message(message.chat.id, "–ø–æ–∑–¥—Ä–∞–≤–ª—è—é –≤—ã –ø—Ä–æ—à–ª–∏ –≤—Ç–æ—Ä–æ–π —ç—Ç–∞–ø", reply_markup=markup_line)
            SQL.update_to_level("level2", message.chat.id)

    def level_3(self, message):
        if SQL.select_to_bd("income", message.chat.id)[0]['level3']:
            self.level_4(message)
        else:
            price = SQL.select_to_bd('income', message.chat.id)[0]['price']
            markup_line = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
            yes = types.InlineKeyboardButton('Sim, vou deixar uma feedback')
            no = types.InlineKeyboardButton('N√£o, eu quero permanecer inc√≥gnito')
            markup_line.add(yes, no)

            bot.send_message(message.chat.id, f"–ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –µ–≥–æ —Å—Ç–æ—Ä–∏—Å –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞ {price}")
            time.sleep(2)
            bot.send_message(message.chat.id, "–ø–æ–∑–¥—Ä–∞–≤–ª—è—é –≤—ã –ø—Ä–æ—à–ª–∏ —Ç—Ä–µ—Ç–∏–π —ç—Ç–∞–ø", reply_markup=markup_line)
            SQL.update_to_level("level3", message.chat.id)



    def level_4(self, message):
        if SQL.select_to_bd("income", message.chat.id)[0]['level4']:
            self.level_4(message)
        else:
            markup = types.ReplyKeyboardMarkup(selective=False)
            commet = bot.send_message(message.chat.id, text.text_level4.substitute())
            bot.send_message(message.chat.id, "–ø–æ–∑–¥—Ä–∞–≤–ª—è—é –≤—ã –ø—Ä–æ—à–ª–∏ 3 —ç—Ç–∞–ø", reply_markup=markup)
            SQL.update_to_level("level4", message.chat.id)
            bot.register_next_step_handler(commet, self.PRONTO)

    def PRONTO(self, message):
        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
        price = SQL.select_to_bd('income', message.chat.id)[0]['price']
        reply = types.KeyboardButton("level4")
        markup.add(reply)
        save_text = text.text_pronto.substitute({"price": price, "text": message.text, "name": message.chat.username})

        bot.send_message(message.chat.id, text.text_pronto.substitute(), reply_markup=markup)